# Makefile.in generated by automake 1.11.1a from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010  Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@KEYCODES_PROGS_TRUE@am__append_1 = getkeycodes setkeycodes
@RESIZECONS_PROGS_TRUE@am__append_2 = resizecons
@OPTIONAL_PROGS_TRUE@am__append_3 = \
@OPTIONAL_PROGS_TRUE@	setlogcons setvesablank getunimap clrunimap outpsfheader setpalette \
@OPTIONAL_PROGS_TRUE@	screendump spawn_console spawn_login

bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_5)
subdir = src
DIST_COMMON = $(dist_bin_SCRIPTS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in loadkeys.analyze.c loadkeys.c loadkeys.h
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = mapscrn$(EXEEXT) loadunimap$(EXEEXT)
@KEYCODES_PROGS_TRUE@am__EXEEXT_2 = getkeycodes$(EXEEXT) \
@KEYCODES_PROGS_TRUE@	setkeycodes$(EXEEXT)
@RESIZECONS_PROGS_TRUE@am__EXEEXT_3 = resizecons$(EXEEXT)
@OPTIONAL_PROGS_TRUE@am__EXEEXT_4 = setlogcons$(EXEEXT) \
@OPTIONAL_PROGS_TRUE@	setvesablank$(EXEEXT) getunimap$(EXEEXT) \
@OPTIONAL_PROGS_TRUE@	clrunimap$(EXEEXT) outpsfheader$(EXEEXT) \
@OPTIONAL_PROGS_TRUE@	setpalette$(EXEEXT) screendump$(EXEEXT) \
@OPTIONAL_PROGS_TRUE@	spawn_console$(EXEEXT) \
@OPTIONAL_PROGS_TRUE@	spawn_login$(EXEEXT)
am__EXEEXT_5 = dumpkeys$(EXEEXT) loadkeys$(EXEEXT) showkey$(EXEEXT) \
	setfont$(EXEEXT) showconsolefont$(EXEEXT) setleds$(EXEEXT) \
	setmetamode$(EXEEXT) kbd_mode$(EXEEXT) psfxtable$(EXEEXT) \
	fgconsole$(EXEEXT) kbdrate$(EXEEXT) chvt$(EXEEXT) \
	deallocvt$(EXEEXT) openvt$(EXEEXT) kbdinfo$(EXEEXT) \
	setvtrgb$(EXEEXT) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 =
am__objects_2 = getfd.$(OBJEXT)
am_chvt_OBJECTS = $(am__objects_1) chvt.$(OBJEXT) $(am__objects_2)
chvt_OBJECTS = $(am_chvt_OBJECTS)
chvt_LDADD = $(LDADD)
am__objects_3 = kdmapop.$(OBJEXT)
am_clrunimap_OBJECTS = $(am__objects_1) clrunimap.$(OBJEXT) \
	$(am__objects_2) $(am__objects_3)
clrunimap_OBJECTS = $(am_clrunimap_OBJECTS)
clrunimap_LDADD = $(LDADD)
am_deallocvt_OBJECTS = $(am__objects_1) deallocvt.$(OBJEXT) \
	$(am__objects_2)
deallocvt_OBJECTS = $(am_deallocvt_OBJECTS)
deallocvt_LDADD = $(LDADD)
am__objects_4 = ksyms.$(OBJEXT)
am__objects_5 = xmalloc.$(OBJEXT)
am_dumpkeys_OBJECTS = $(am__objects_1) dumpkeys.$(OBJEXT) \
	$(am__objects_2) $(am__objects_4) $(am__objects_5)
dumpkeys_OBJECTS = $(am_dumpkeys_OBJECTS)
dumpkeys_LDADD = $(LDADD)
am_fgconsole_OBJECTS = $(am__objects_1) fgconsole.$(OBJEXT) \
	$(am__objects_2)
fgconsole_OBJECTS = $(am_fgconsole_OBJECTS)
fgconsole_LDADD = $(LDADD)
am_getkeycodes_OBJECTS = $(am__objects_1) getkeycodes.$(OBJEXT) \
	$(am__objects_2)
getkeycodes_OBJECTS = $(am_getkeycodes_OBJECTS)
getkeycodes_LDADD = $(LDADD)
am_getunimap_OBJECTS = $(am__objects_1) getunimap.$(OBJEXT) \
	$(am__objects_2) $(am__objects_3)
getunimap_OBJECTS = $(am_getunimap_OBJECTS)
getunimap_LDADD = $(LDADD)
am_kbd_mode_OBJECTS = $(am__objects_1) kbd_mode.$(OBJEXT) \
	$(am__objects_2)
kbd_mode_OBJECTS = $(am_kbd_mode_OBJECTS)
kbd_mode_LDADD = $(LDADD)
am_kbdinfo_OBJECTS = $(am__objects_1) kbdinfo.$(OBJEXT) \
	$(am__objects_2)
kbdinfo_OBJECTS = $(am_kbdinfo_OBJECTS)
kbdinfo_LDADD = $(LDADD)
kbdrate_SOURCES = kbdrate.c
kbdrate_OBJECTS = kbdrate.$(OBJEXT)
kbdrate_LDADD = $(LDADD)
am__objects_6 = findfile.$(OBJEXT)
am_loadkeys_OBJECTS = loadkeys.$(OBJEXT) loadkeys.analyze.$(OBJEXT) \
	$(am__objects_2) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6)
loadkeys_OBJECTS = $(am_loadkeys_OBJECTS)
loadkeys_LDADD = $(LDADD)
am__objects_7 = loadunimap-findfile.$(OBJEXT)
am__objects_8 = loadunimap-psffontop.$(OBJEXT)
am__objects_9 = loadunimap-utf8.$(OBJEXT)
am__objects_10 = loadunimap-xmalloc.$(OBJEXT)
am__objects_11 = loadunimap-getfd.$(OBJEXT)
am__objects_12 = loadunimap-kdmapop.$(OBJEXT)
am_loadunimap_OBJECTS = $(am__objects_1) \
	loadunimap-loadunimap.$(OBJEXT) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	$(am__objects_11) $(am__objects_12)
loadunimap_OBJECTS = $(am_loadunimap_OBJECTS)
loadunimap_LDADD = $(LDADD)
loadunimap_LINK = $(CCLD) $(loadunimap_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_13 = mapscrn-findfile.$(OBJEXT)
am__objects_14 = mapscrn-utf8.$(OBJEXT)
am__objects_15 = mapscrn-xmalloc.$(OBJEXT)
am__objects_16 = mapscrn-getfd.$(OBJEXT)
am__objects_17 = mapscrn-kdmapop.$(OBJEXT)
am_mapscrn_OBJECTS = $(am__objects_1) mapscrn-mapscrn.$(OBJEXT) \
	$(am__objects_13) $(am__objects_14) $(am__objects_15) \
	$(am__objects_16) $(am__objects_17)
mapscrn_OBJECTS = $(am_mapscrn_OBJECTS)
mapscrn_LDADD = $(LDADD)
mapscrn_LINK = $(CCLD) $(mapscrn_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_openvt_OBJECTS = $(am__objects_1) openvt.$(OBJEXT) $(am__objects_2) \
	$(am__objects_5)
openvt_OBJECTS = $(am_openvt_OBJECTS)
openvt_LDADD = $(LDADD)
outpsfheader_SOURCES = outpsfheader.c
outpsfheader_OBJECTS = outpsfheader.$(OBJEXT)
outpsfheader_LDADD = $(LDADD)
am__objects_18 = psffontop.$(OBJEXT)
am__objects_19 = utf8.$(OBJEXT)
am_psfxtable_OBJECTS = $(am__objects_1) psfxtable.$(OBJEXT) \
	$(am__objects_18) $(am__objects_5) $(am__objects_19) \
	$(am__objects_2)
psfxtable_OBJECTS = $(am_psfxtable_OBJECTS)
psfxtable_LDADD = $(LDADD)
am_resizecons_OBJECTS = $(am__objects_1) resizecons.$(OBJEXT) \
	$(am__objects_2) $(am__objects_6) $(am__objects_5)
resizecons_OBJECTS = $(am_resizecons_OBJECTS)
resizecons_LDADD = $(LDADD)
am_screendump_OBJECTS = $(am__objects_1) screendump.$(OBJEXT) \
	$(am__objects_5)
screendump_OBJECTS = $(am_screendump_OBJECTS)
screendump_LDADD = $(LDADD)
am__objects_20 = loadunimap.$(OBJEXT)
am_setfont_OBJECTS = $(am__objects_1) setfont.$(OBJEXT) \
	$(am__objects_6) $(am__objects_5) $(am__objects_2) \
	mapscrn.$(OBJEXT) $(am__objects_3) $(am__objects_18) \
	$(am__objects_19) kdfontop.$(OBJEXT) $(am__objects_20)
setfont_OBJECTS = $(am_setfont_OBJECTS)
setfont_LDADD = $(LDADD)
am_setkeycodes_OBJECTS = $(am__objects_1) setkeycodes.$(OBJEXT) \
	$(am__objects_2)
setkeycodes_OBJECTS = $(am_setkeycodes_OBJECTS)
setkeycodes_LDADD = $(LDADD)
setleds_SOURCES = setleds.c
setleds_OBJECTS = setleds.$(OBJEXT)
setleds_LDADD = $(LDADD)
am_setlogcons_OBJECTS = $(am__objects_1) setlogcons.$(OBJEXT) \
	$(am__objects_2)
setlogcons_OBJECTS = $(am_setlogcons_OBJECTS)
setlogcons_LDADD = $(LDADD)
setmetamode_SOURCES = setmetamode.c
setmetamode_OBJECTS = setmetamode.$(OBJEXT)
setmetamode_LDADD = $(LDADD)
am_setpalette_OBJECTS = $(am__objects_1) setpalette.$(OBJEXT) \
	$(am__objects_2)
setpalette_OBJECTS = $(am_setpalette_OBJECTS)
setpalette_LDADD = $(LDADD)
am_setvesablank_OBJECTS = $(am__objects_1) setvesablank.$(OBJEXT) \
	$(am__objects_2)
setvesablank_OBJECTS = $(am_setvesablank_OBJECTS)
setvesablank_LDADD = $(LDADD)
am_setvtrgb_OBJECTS = $(am__objects_1) setvtrgb.$(OBJEXT) \
	$(am__objects_2)
setvtrgb_OBJECTS = $(am_setvtrgb_OBJECTS)
setvtrgb_LDADD = $(LDADD)
am_showconsolefont_OBJECTS = $(am__objects_1) \
	showconsolefont.$(OBJEXT) $(am__objects_2) $(am__objects_5) \
	$(am__objects_3) kdfontop.$(OBJEXT)
showconsolefont_OBJECTS = $(am_showconsolefont_OBJECTS)
showconsolefont_LDADD = $(LDADD)
am_showkey_OBJECTS = $(am__objects_1) showkey.$(OBJEXT) \
	$(am__objects_2)
showkey_OBJECTS = $(am_showkey_OBJECTS)
showkey_LDADD = $(LDADD)
spawn_console_SOURCES = spawn_console.c
spawn_console_OBJECTS = spawn_console.$(OBJEXT)
spawn_console_LDADD = $(LDADD)
spawn_login_SOURCES = spawn_login.c
spawn_login_OBJECTS = spawn_login.$(OBJEXT)
spawn_login_LDADD = $(LDADD)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
SCRIPTS = $(dist_bin_SCRIPTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
YLWRAP = $(top_srcdir)/config/ylwrap
YACCCOMPILE = $(YACC) $(YFLAGS) $(AM_YFLAGS)
SOURCES = $(chvt_SOURCES) $(clrunimap_SOURCES) $(deallocvt_SOURCES) \
	$(dumpkeys_SOURCES) $(fgconsole_SOURCES) \
	$(getkeycodes_SOURCES) $(getunimap_SOURCES) \
	$(kbd_mode_SOURCES) $(kbdinfo_SOURCES) kbdrate.c \
	$(loadkeys_SOURCES) $(loadunimap_SOURCES) $(mapscrn_SOURCES) \
	$(openvt_SOURCES) outpsfheader.c $(psfxtable_SOURCES) \
	$(resizecons_SOURCES) $(screendump_SOURCES) $(setfont_SOURCES) \
	$(setkeycodes_SOURCES) setleds.c $(setlogcons_SOURCES) \
	setmetamode.c $(setpalette_SOURCES) $(setvesablank_SOURCES) \
	$(setvtrgb_SOURCES) $(showconsolefont_SOURCES) \
	$(showkey_SOURCES) spawn_console.c spawn_login.c
DIST_SOURCES = $(chvt_SOURCES) $(clrunimap_SOURCES) \
	$(deallocvt_SOURCES) $(dumpkeys_SOURCES) $(fgconsole_SOURCES) \
	$(getkeycodes_SOURCES) $(getunimap_SOURCES) \
	$(kbd_mode_SOURCES) $(kbdinfo_SOURCES) kbdrate.c \
	$(loadkeys_SOURCES) $(loadunimap_SOURCES) $(mapscrn_SOURCES) \
	$(openvt_SOURCES) outpsfheader.c $(psfxtable_SOURCES) \
	$(resizecons_SOURCES) $(screendump_SOURCES) $(setfont_SOURCES) \
	$(setkeycodes_SOURCES) setleds.c $(setlogcons_SOURCES) \
	setmetamode.c $(setpalette_SOURCES) $(setvesablank_SOURCES) \
	$(setvtrgb_SOURCES) $(showconsolefont_SOURCES) \
	$(showkey_SOURCES) spawn_console.c spawn_login.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGMERGE = @MSGMERGE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POSUB = @POSUB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
WARNINGS = -Wall -Wextra -Wmissing-noreturn -Wdisabled-optimization \
	-Wcast-align -Wshadow -Wmissing-format-attribute -Wmissing-prototypes \
	-Wstrict-prototypes -Wmissing-declarations

AM_CPPFLAGS = -DDATADIR=\"$(datadir)\" -DLOCALEDIR=\"$(localedir)\" $(WARNINGS) \
	-funit-at-a-time

OLDPROGS = mapscrn loadunimap
PROGS = dumpkeys loadkeys showkey setfont showconsolefont setleds \
	setmetamode kbd_mode psfxtable fgconsole kbdrate chvt \
	deallocvt openvt kbdinfo setvtrgb $(am__append_1) \
	$(am__append_2) $(am__append_3)
dist_bin_SCRIPTS = unicode_start unicode_stop
EXTRA_DIST = \
	analyze.c analyze.l wctomb.c totextmode.c \
	README.cad README.init README.openvt \
	cad

ALL_S = modifiers.h nls.h paths.h version.h kbd.h
FIND_S = findfile.c findfile.h
GETFD_S = getfd.c getfd.h
KDMA_S = kdmapop.c kdmapop.h
KSYMS_S = ksyms.c ksyms.h cp1250.syms.h ethiopic.syms.h koi8.syms.h sami.syms.h thai.syms.h
PSF_S = psf.h psffontop.c psffontop.h
UNIM_S = loadunimap.c loadunimap.h
UTF8_S = utf8.c utf8.h
XMAL_S = xmalloc.c xmalloc.h
chvt_SOURCES = $(ALL_S) chvt.c $(GETFD_S)
clrunimap_SOURCES = $(ALL_S) clrunimap.c $(GETFD_S) $(KDMA_S)
deallocvt_SOURCES = $(ALL_S) deallocvt.c $(GETFD_S)
dumpkeys_SOURCES = $(ALL_S) dumpkeys.c $(GETFD_S) $(KSYMS_S) $(XMAL_S)
fgconsole_SOURCES = $(ALL_S) fgconsole.c $(GETFD_S)
getkeycodes_SOURCES = $(ALL_S) getkeycodes.c $(GETFD_S)
getunimap_SOURCES = $(ALL_S) getunimap.c $(GETFD_S) $(KDMA_S)
kbd_mode_SOURCES = $(ALL_S) kbd_mode.c $(GETFD_S)
loadunimap_SOURCES = $(ALL_S) loadunimap.c $(FIND_S) $(PSF_S) $(UTF8_S) $(XMAL_S) $(GETFD_S) $(KDMA_S)
mapscrn_SOURCES = $(ALL_S) mapscrn.c $(FIND_S) $(UTF8_S) $(XMAL_S) $(GETFD_S) $(KDMA_S)
openvt_SOURCES = $(ALL_S) openvt.c $(GETFD_S) $(XMAL_S)
psfxtable_SOURCES = $(ALL_S) psfxtable.c $(PSF_S) $(XMAL_S) $(UTF8_S) $(GETFD_S)
resizecons_SOURCES = $(ALL_S) resizecons.c $(GETFD_S) $(FIND_S) $(XMAL_S)
screendump_SOURCES = $(ALL_S) screendump.c $(XMAL_S)
setfont_SOURCES = $(ALL_S) setfont.c $(FIND_S) $(XMAL_S) $(GETFD_S) mapscrn.c $(KDMA_S) $(PSF_S) $(UTF8_S) kdfontop.c kdfontop.h $(UNIM_S)
setkeycodes_SOURCES = $(ALL_S) setkeycodes.c $(GETFD_S)
setvtrgb_SOURCES = $(ALL_S) setvtrgb.c $(GETFD_S)
setlogcons_SOURCES = $(ALL_S) setlogcons.c $(GETFD_S)
setpalette_SOURCES = $(ALL_S) setpalette.c $(GETFD_S)
setvesablank_SOURCES = $(ALL_S) setvesablank.c $(GETFD_S)
showconsolefont_SOURCES = $(ALL_S) showconsolefont.c $(GETFD_S) $(XMAL_S) $(KDMA_S) kdfontop.c kdfontop.h
showkey_SOURCES = $(ALL_S) showkey.c $(GETFD_S)
kbdinfo_SOURCES = $(ALL_S) kbdinfo.c $(GETFD_S)
mapscrn_CFLAGS = -DMAIN
loadunimap_CFLAGS = -DMAIN
AM_YFLAGS = -d
BUILT_SOURCES = loadkeys.c loadkeys.analyze.c loadkeys.h
loadkeys_SOURCES = loadkeys.y loadkeys.analyze.l $(GETFD_S) $(KSYMS_S) $(XMAL_S) $(FIND_S)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .l .o .obj .y
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
chvt$(EXEEXT): $(chvt_OBJECTS) $(chvt_DEPENDENCIES) 
	@rm -f chvt$(EXEEXT)
	$(LINK) $(chvt_OBJECTS) $(chvt_LDADD) $(LIBS)
clrunimap$(EXEEXT): $(clrunimap_OBJECTS) $(clrunimap_DEPENDENCIES) 
	@rm -f clrunimap$(EXEEXT)
	$(LINK) $(clrunimap_OBJECTS) $(clrunimap_LDADD) $(LIBS)
deallocvt$(EXEEXT): $(deallocvt_OBJECTS) $(deallocvt_DEPENDENCIES) 
	@rm -f deallocvt$(EXEEXT)
	$(LINK) $(deallocvt_OBJECTS) $(deallocvt_LDADD) $(LIBS)
dumpkeys$(EXEEXT): $(dumpkeys_OBJECTS) $(dumpkeys_DEPENDENCIES) 
	@rm -f dumpkeys$(EXEEXT)
	$(LINK) $(dumpkeys_OBJECTS) $(dumpkeys_LDADD) $(LIBS)
fgconsole$(EXEEXT): $(fgconsole_OBJECTS) $(fgconsole_DEPENDENCIES) 
	@rm -f fgconsole$(EXEEXT)
	$(LINK) $(fgconsole_OBJECTS) $(fgconsole_LDADD) $(LIBS)
getkeycodes$(EXEEXT): $(getkeycodes_OBJECTS) $(getkeycodes_DEPENDENCIES) 
	@rm -f getkeycodes$(EXEEXT)
	$(LINK) $(getkeycodes_OBJECTS) $(getkeycodes_LDADD) $(LIBS)
getunimap$(EXEEXT): $(getunimap_OBJECTS) $(getunimap_DEPENDENCIES) 
	@rm -f getunimap$(EXEEXT)
	$(LINK) $(getunimap_OBJECTS) $(getunimap_LDADD) $(LIBS)
kbd_mode$(EXEEXT): $(kbd_mode_OBJECTS) $(kbd_mode_DEPENDENCIES) 
	@rm -f kbd_mode$(EXEEXT)
	$(LINK) $(kbd_mode_OBJECTS) $(kbd_mode_LDADD) $(LIBS)
kbdinfo$(EXEEXT): $(kbdinfo_OBJECTS) $(kbdinfo_DEPENDENCIES) 
	@rm -f kbdinfo$(EXEEXT)
	$(LINK) $(kbdinfo_OBJECTS) $(kbdinfo_LDADD) $(LIBS)
kbdrate$(EXEEXT): $(kbdrate_OBJECTS) $(kbdrate_DEPENDENCIES) 
	@rm -f kbdrate$(EXEEXT)
	$(LINK) $(kbdrate_OBJECTS) $(kbdrate_LDADD) $(LIBS)
loadkeys.h: loadkeys.c
	@if test ! -f $@; then \
	  rm -f loadkeys.c; \
	  $(MAKE) $(AM_MAKEFLAGS) loadkeys.c; \
	else :; fi
loadkeys$(EXEEXT): $(loadkeys_OBJECTS) $(loadkeys_DEPENDENCIES) 
	@rm -f loadkeys$(EXEEXT)
	$(LINK) $(loadkeys_OBJECTS) $(loadkeys_LDADD) $(LIBS)
loadunimap$(EXEEXT): $(loadunimap_OBJECTS) $(loadunimap_DEPENDENCIES) 
	@rm -f loadunimap$(EXEEXT)
	$(loadunimap_LINK) $(loadunimap_OBJECTS) $(loadunimap_LDADD) $(LIBS)
mapscrn$(EXEEXT): $(mapscrn_OBJECTS) $(mapscrn_DEPENDENCIES) 
	@rm -f mapscrn$(EXEEXT)
	$(mapscrn_LINK) $(mapscrn_OBJECTS) $(mapscrn_LDADD) $(LIBS)
openvt$(EXEEXT): $(openvt_OBJECTS) $(openvt_DEPENDENCIES) 
	@rm -f openvt$(EXEEXT)
	$(LINK) $(openvt_OBJECTS) $(openvt_LDADD) $(LIBS)
outpsfheader$(EXEEXT): $(outpsfheader_OBJECTS) $(outpsfheader_DEPENDENCIES) 
	@rm -f outpsfheader$(EXEEXT)
	$(LINK) $(outpsfheader_OBJECTS) $(outpsfheader_LDADD) $(LIBS)
psfxtable$(EXEEXT): $(psfxtable_OBJECTS) $(psfxtable_DEPENDENCIES) 
	@rm -f psfxtable$(EXEEXT)
	$(LINK) $(psfxtable_OBJECTS) $(psfxtable_LDADD) $(LIBS)
resizecons$(EXEEXT): $(resizecons_OBJECTS) $(resizecons_DEPENDENCIES) 
	@rm -f resizecons$(EXEEXT)
	$(LINK) $(resizecons_OBJECTS) $(resizecons_LDADD) $(LIBS)
screendump$(EXEEXT): $(screendump_OBJECTS) $(screendump_DEPENDENCIES) 
	@rm -f screendump$(EXEEXT)
	$(LINK) $(screendump_OBJECTS) $(screendump_LDADD) $(LIBS)
setfont$(EXEEXT): $(setfont_OBJECTS) $(setfont_DEPENDENCIES) 
	@rm -f setfont$(EXEEXT)
	$(LINK) $(setfont_OBJECTS) $(setfont_LDADD) $(LIBS)
setkeycodes$(EXEEXT): $(setkeycodes_OBJECTS) $(setkeycodes_DEPENDENCIES) 
	@rm -f setkeycodes$(EXEEXT)
	$(LINK) $(setkeycodes_OBJECTS) $(setkeycodes_LDADD) $(LIBS)
setleds$(EXEEXT): $(setleds_OBJECTS) $(setleds_DEPENDENCIES) 
	@rm -f setleds$(EXEEXT)
	$(LINK) $(setleds_OBJECTS) $(setleds_LDADD) $(LIBS)
setlogcons$(EXEEXT): $(setlogcons_OBJECTS) $(setlogcons_DEPENDENCIES) 
	@rm -f setlogcons$(EXEEXT)
	$(LINK) $(setlogcons_OBJECTS) $(setlogcons_LDADD) $(LIBS)
setmetamode$(EXEEXT): $(setmetamode_OBJECTS) $(setmetamode_DEPENDENCIES) 
	@rm -f setmetamode$(EXEEXT)
	$(LINK) $(setmetamode_OBJECTS) $(setmetamode_LDADD) $(LIBS)
setpalette$(EXEEXT): $(setpalette_OBJECTS) $(setpalette_DEPENDENCIES) 
	@rm -f setpalette$(EXEEXT)
	$(LINK) $(setpalette_OBJECTS) $(setpalette_LDADD) $(LIBS)
setvesablank$(EXEEXT): $(setvesablank_OBJECTS) $(setvesablank_DEPENDENCIES) 
	@rm -f setvesablank$(EXEEXT)
	$(LINK) $(setvesablank_OBJECTS) $(setvesablank_LDADD) $(LIBS)
setvtrgb$(EXEEXT): $(setvtrgb_OBJECTS) $(setvtrgb_DEPENDENCIES) 
	@rm -f setvtrgb$(EXEEXT)
	$(LINK) $(setvtrgb_OBJECTS) $(setvtrgb_LDADD) $(LIBS)
showconsolefont$(EXEEXT): $(showconsolefont_OBJECTS) $(showconsolefont_DEPENDENCIES) 
	@rm -f showconsolefont$(EXEEXT)
	$(LINK) $(showconsolefont_OBJECTS) $(showconsolefont_LDADD) $(LIBS)
showkey$(EXEEXT): $(showkey_OBJECTS) $(showkey_DEPENDENCIES) 
	@rm -f showkey$(EXEEXT)
	$(LINK) $(showkey_OBJECTS) $(showkey_LDADD) $(LIBS)
spawn_console$(EXEEXT): $(spawn_console_OBJECTS) $(spawn_console_DEPENDENCIES) 
	@rm -f spawn_console$(EXEEXT)
	$(LINK) $(spawn_console_OBJECTS) $(spawn_console_LDADD) $(LIBS)
spawn_login$(EXEEXT): $(spawn_login_OBJECTS) $(spawn_login_DEPENDENCIES) 
	@rm -f spawn_login$(EXEEXT)
	$(LINK) $(spawn_login_OBJECTS) $(spawn_login_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chvt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clrunimap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deallocvt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dumpkeys.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fgconsole.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/findfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getfd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getkeycodes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getunimap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kbd_mode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kbdinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kbdrate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdfontop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdmapop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ksyms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadkeys.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadkeys.analyze.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadunimap-findfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadunimap-getfd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadunimap-kdmapop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadunimap-loadunimap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadunimap-psffontop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadunimap-utf8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadunimap-xmalloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadunimap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapscrn-findfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapscrn-getfd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapscrn-kdmapop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapscrn-mapscrn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapscrn-utf8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapscrn-xmalloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapscrn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/openvt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/outpsfheader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/psffontop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/psfxtable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resizecons.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/screendump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setfont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setkeycodes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setleds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setlogcons.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setmetamode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setpalette.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setvesablank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setvtrgb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/showconsolefont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/showkey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spawn_console.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spawn_login.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utf8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmalloc.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

loadunimap-loadunimap.o: loadunimap.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-loadunimap.o -MD -MP -MF $(DEPDIR)/loadunimap-loadunimap.Tpo -c -o loadunimap-loadunimap.o `test -f 'loadunimap.c' || echo '$(srcdir)/'`loadunimap.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-loadunimap.Tpo $(DEPDIR)/loadunimap-loadunimap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='loadunimap.c' object='loadunimap-loadunimap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-loadunimap.o `test -f 'loadunimap.c' || echo '$(srcdir)/'`loadunimap.c

loadunimap-loadunimap.obj: loadunimap.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-loadunimap.obj -MD -MP -MF $(DEPDIR)/loadunimap-loadunimap.Tpo -c -o loadunimap-loadunimap.obj `if test -f 'loadunimap.c'; then $(CYGPATH_W) 'loadunimap.c'; else $(CYGPATH_W) '$(srcdir)/loadunimap.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-loadunimap.Tpo $(DEPDIR)/loadunimap-loadunimap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='loadunimap.c' object='loadunimap-loadunimap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-loadunimap.obj `if test -f 'loadunimap.c'; then $(CYGPATH_W) 'loadunimap.c'; else $(CYGPATH_W) '$(srcdir)/loadunimap.c'; fi`

loadunimap-findfile.o: findfile.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-findfile.o -MD -MP -MF $(DEPDIR)/loadunimap-findfile.Tpo -c -o loadunimap-findfile.o `test -f 'findfile.c' || echo '$(srcdir)/'`findfile.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-findfile.Tpo $(DEPDIR)/loadunimap-findfile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='findfile.c' object='loadunimap-findfile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-findfile.o `test -f 'findfile.c' || echo '$(srcdir)/'`findfile.c

loadunimap-findfile.obj: findfile.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-findfile.obj -MD -MP -MF $(DEPDIR)/loadunimap-findfile.Tpo -c -o loadunimap-findfile.obj `if test -f 'findfile.c'; then $(CYGPATH_W) 'findfile.c'; else $(CYGPATH_W) '$(srcdir)/findfile.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-findfile.Tpo $(DEPDIR)/loadunimap-findfile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='findfile.c' object='loadunimap-findfile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-findfile.obj `if test -f 'findfile.c'; then $(CYGPATH_W) 'findfile.c'; else $(CYGPATH_W) '$(srcdir)/findfile.c'; fi`

loadunimap-psffontop.o: psffontop.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-psffontop.o -MD -MP -MF $(DEPDIR)/loadunimap-psffontop.Tpo -c -o loadunimap-psffontop.o `test -f 'psffontop.c' || echo '$(srcdir)/'`psffontop.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-psffontop.Tpo $(DEPDIR)/loadunimap-psffontop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='psffontop.c' object='loadunimap-psffontop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-psffontop.o `test -f 'psffontop.c' || echo '$(srcdir)/'`psffontop.c

loadunimap-psffontop.obj: psffontop.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-psffontop.obj -MD -MP -MF $(DEPDIR)/loadunimap-psffontop.Tpo -c -o loadunimap-psffontop.obj `if test -f 'psffontop.c'; then $(CYGPATH_W) 'psffontop.c'; else $(CYGPATH_W) '$(srcdir)/psffontop.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-psffontop.Tpo $(DEPDIR)/loadunimap-psffontop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='psffontop.c' object='loadunimap-psffontop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-psffontop.obj `if test -f 'psffontop.c'; then $(CYGPATH_W) 'psffontop.c'; else $(CYGPATH_W) '$(srcdir)/psffontop.c'; fi`

loadunimap-utf8.o: utf8.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-utf8.o -MD -MP -MF $(DEPDIR)/loadunimap-utf8.Tpo -c -o loadunimap-utf8.o `test -f 'utf8.c' || echo '$(srcdir)/'`utf8.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-utf8.Tpo $(DEPDIR)/loadunimap-utf8.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='utf8.c' object='loadunimap-utf8.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-utf8.o `test -f 'utf8.c' || echo '$(srcdir)/'`utf8.c

loadunimap-utf8.obj: utf8.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-utf8.obj -MD -MP -MF $(DEPDIR)/loadunimap-utf8.Tpo -c -o loadunimap-utf8.obj `if test -f 'utf8.c'; then $(CYGPATH_W) 'utf8.c'; else $(CYGPATH_W) '$(srcdir)/utf8.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-utf8.Tpo $(DEPDIR)/loadunimap-utf8.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='utf8.c' object='loadunimap-utf8.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-utf8.obj `if test -f 'utf8.c'; then $(CYGPATH_W) 'utf8.c'; else $(CYGPATH_W) '$(srcdir)/utf8.c'; fi`

loadunimap-xmalloc.o: xmalloc.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-xmalloc.o -MD -MP -MF $(DEPDIR)/loadunimap-xmalloc.Tpo -c -o loadunimap-xmalloc.o `test -f 'xmalloc.c' || echo '$(srcdir)/'`xmalloc.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-xmalloc.Tpo $(DEPDIR)/loadunimap-xmalloc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='xmalloc.c' object='loadunimap-xmalloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-xmalloc.o `test -f 'xmalloc.c' || echo '$(srcdir)/'`xmalloc.c

loadunimap-xmalloc.obj: xmalloc.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-xmalloc.obj -MD -MP -MF $(DEPDIR)/loadunimap-xmalloc.Tpo -c -o loadunimap-xmalloc.obj `if test -f 'xmalloc.c'; then $(CYGPATH_W) 'xmalloc.c'; else $(CYGPATH_W) '$(srcdir)/xmalloc.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-xmalloc.Tpo $(DEPDIR)/loadunimap-xmalloc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='xmalloc.c' object='loadunimap-xmalloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-xmalloc.obj `if test -f 'xmalloc.c'; then $(CYGPATH_W) 'xmalloc.c'; else $(CYGPATH_W) '$(srcdir)/xmalloc.c'; fi`

loadunimap-getfd.o: getfd.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-getfd.o -MD -MP -MF $(DEPDIR)/loadunimap-getfd.Tpo -c -o loadunimap-getfd.o `test -f 'getfd.c' || echo '$(srcdir)/'`getfd.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-getfd.Tpo $(DEPDIR)/loadunimap-getfd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='getfd.c' object='loadunimap-getfd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-getfd.o `test -f 'getfd.c' || echo '$(srcdir)/'`getfd.c

loadunimap-getfd.obj: getfd.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-getfd.obj -MD -MP -MF $(DEPDIR)/loadunimap-getfd.Tpo -c -o loadunimap-getfd.obj `if test -f 'getfd.c'; then $(CYGPATH_W) 'getfd.c'; else $(CYGPATH_W) '$(srcdir)/getfd.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-getfd.Tpo $(DEPDIR)/loadunimap-getfd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='getfd.c' object='loadunimap-getfd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-getfd.obj `if test -f 'getfd.c'; then $(CYGPATH_W) 'getfd.c'; else $(CYGPATH_W) '$(srcdir)/getfd.c'; fi`

loadunimap-kdmapop.o: kdmapop.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-kdmapop.o -MD -MP -MF $(DEPDIR)/loadunimap-kdmapop.Tpo -c -o loadunimap-kdmapop.o `test -f 'kdmapop.c' || echo '$(srcdir)/'`kdmapop.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-kdmapop.Tpo $(DEPDIR)/loadunimap-kdmapop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='kdmapop.c' object='loadunimap-kdmapop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-kdmapop.o `test -f 'kdmapop.c' || echo '$(srcdir)/'`kdmapop.c

loadunimap-kdmapop.obj: kdmapop.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -MT loadunimap-kdmapop.obj -MD -MP -MF $(DEPDIR)/loadunimap-kdmapop.Tpo -c -o loadunimap-kdmapop.obj `if test -f 'kdmapop.c'; then $(CYGPATH_W) 'kdmapop.c'; else $(CYGPATH_W) '$(srcdir)/kdmapop.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/loadunimap-kdmapop.Tpo $(DEPDIR)/loadunimap-kdmapop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='kdmapop.c' object='loadunimap-kdmapop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(loadunimap_CFLAGS) $(CFLAGS) -c -o loadunimap-kdmapop.obj `if test -f 'kdmapop.c'; then $(CYGPATH_W) 'kdmapop.c'; else $(CYGPATH_W) '$(srcdir)/kdmapop.c'; fi`

mapscrn-mapscrn.o: mapscrn.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-mapscrn.o -MD -MP -MF $(DEPDIR)/mapscrn-mapscrn.Tpo -c -o mapscrn-mapscrn.o `test -f 'mapscrn.c' || echo '$(srcdir)/'`mapscrn.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-mapscrn.Tpo $(DEPDIR)/mapscrn-mapscrn.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mapscrn.c' object='mapscrn-mapscrn.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-mapscrn.o `test -f 'mapscrn.c' || echo '$(srcdir)/'`mapscrn.c

mapscrn-mapscrn.obj: mapscrn.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-mapscrn.obj -MD -MP -MF $(DEPDIR)/mapscrn-mapscrn.Tpo -c -o mapscrn-mapscrn.obj `if test -f 'mapscrn.c'; then $(CYGPATH_W) 'mapscrn.c'; else $(CYGPATH_W) '$(srcdir)/mapscrn.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-mapscrn.Tpo $(DEPDIR)/mapscrn-mapscrn.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mapscrn.c' object='mapscrn-mapscrn.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-mapscrn.obj `if test -f 'mapscrn.c'; then $(CYGPATH_W) 'mapscrn.c'; else $(CYGPATH_W) '$(srcdir)/mapscrn.c'; fi`

mapscrn-findfile.o: findfile.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-findfile.o -MD -MP -MF $(DEPDIR)/mapscrn-findfile.Tpo -c -o mapscrn-findfile.o `test -f 'findfile.c' || echo '$(srcdir)/'`findfile.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-findfile.Tpo $(DEPDIR)/mapscrn-findfile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='findfile.c' object='mapscrn-findfile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-findfile.o `test -f 'findfile.c' || echo '$(srcdir)/'`findfile.c

mapscrn-findfile.obj: findfile.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-findfile.obj -MD -MP -MF $(DEPDIR)/mapscrn-findfile.Tpo -c -o mapscrn-findfile.obj `if test -f 'findfile.c'; then $(CYGPATH_W) 'findfile.c'; else $(CYGPATH_W) '$(srcdir)/findfile.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-findfile.Tpo $(DEPDIR)/mapscrn-findfile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='findfile.c' object='mapscrn-findfile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-findfile.obj `if test -f 'findfile.c'; then $(CYGPATH_W) 'findfile.c'; else $(CYGPATH_W) '$(srcdir)/findfile.c'; fi`

mapscrn-utf8.o: utf8.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-utf8.o -MD -MP -MF $(DEPDIR)/mapscrn-utf8.Tpo -c -o mapscrn-utf8.o `test -f 'utf8.c' || echo '$(srcdir)/'`utf8.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-utf8.Tpo $(DEPDIR)/mapscrn-utf8.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='utf8.c' object='mapscrn-utf8.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-utf8.o `test -f 'utf8.c' || echo '$(srcdir)/'`utf8.c

mapscrn-utf8.obj: utf8.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-utf8.obj -MD -MP -MF $(DEPDIR)/mapscrn-utf8.Tpo -c -o mapscrn-utf8.obj `if test -f 'utf8.c'; then $(CYGPATH_W) 'utf8.c'; else $(CYGPATH_W) '$(srcdir)/utf8.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-utf8.Tpo $(DEPDIR)/mapscrn-utf8.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='utf8.c' object='mapscrn-utf8.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-utf8.obj `if test -f 'utf8.c'; then $(CYGPATH_W) 'utf8.c'; else $(CYGPATH_W) '$(srcdir)/utf8.c'; fi`

mapscrn-xmalloc.o: xmalloc.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-xmalloc.o -MD -MP -MF $(DEPDIR)/mapscrn-xmalloc.Tpo -c -o mapscrn-xmalloc.o `test -f 'xmalloc.c' || echo '$(srcdir)/'`xmalloc.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-xmalloc.Tpo $(DEPDIR)/mapscrn-xmalloc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='xmalloc.c' object='mapscrn-xmalloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-xmalloc.o `test -f 'xmalloc.c' || echo '$(srcdir)/'`xmalloc.c

mapscrn-xmalloc.obj: xmalloc.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-xmalloc.obj -MD -MP -MF $(DEPDIR)/mapscrn-xmalloc.Tpo -c -o mapscrn-xmalloc.obj `if test -f 'xmalloc.c'; then $(CYGPATH_W) 'xmalloc.c'; else $(CYGPATH_W) '$(srcdir)/xmalloc.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-xmalloc.Tpo $(DEPDIR)/mapscrn-xmalloc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='xmalloc.c' object='mapscrn-xmalloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-xmalloc.obj `if test -f 'xmalloc.c'; then $(CYGPATH_W) 'xmalloc.c'; else $(CYGPATH_W) '$(srcdir)/xmalloc.c'; fi`

mapscrn-getfd.o: getfd.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-getfd.o -MD -MP -MF $(DEPDIR)/mapscrn-getfd.Tpo -c -o mapscrn-getfd.o `test -f 'getfd.c' || echo '$(srcdir)/'`getfd.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-getfd.Tpo $(DEPDIR)/mapscrn-getfd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='getfd.c' object='mapscrn-getfd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-getfd.o `test -f 'getfd.c' || echo '$(srcdir)/'`getfd.c

mapscrn-getfd.obj: getfd.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-getfd.obj -MD -MP -MF $(DEPDIR)/mapscrn-getfd.Tpo -c -o mapscrn-getfd.obj `if test -f 'getfd.c'; then $(CYGPATH_W) 'getfd.c'; else $(CYGPATH_W) '$(srcdir)/getfd.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-getfd.Tpo $(DEPDIR)/mapscrn-getfd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='getfd.c' object='mapscrn-getfd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-getfd.obj `if test -f 'getfd.c'; then $(CYGPATH_W) 'getfd.c'; else $(CYGPATH_W) '$(srcdir)/getfd.c'; fi`

mapscrn-kdmapop.o: kdmapop.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-kdmapop.o -MD -MP -MF $(DEPDIR)/mapscrn-kdmapop.Tpo -c -o mapscrn-kdmapop.o `test -f 'kdmapop.c' || echo '$(srcdir)/'`kdmapop.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-kdmapop.Tpo $(DEPDIR)/mapscrn-kdmapop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='kdmapop.c' object='mapscrn-kdmapop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-kdmapop.o `test -f 'kdmapop.c' || echo '$(srcdir)/'`kdmapop.c

mapscrn-kdmapop.obj: kdmapop.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -MT mapscrn-kdmapop.obj -MD -MP -MF $(DEPDIR)/mapscrn-kdmapop.Tpo -c -o mapscrn-kdmapop.obj `if test -f 'kdmapop.c'; then $(CYGPATH_W) 'kdmapop.c'; else $(CYGPATH_W) '$(srcdir)/kdmapop.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/mapscrn-kdmapop.Tpo $(DEPDIR)/mapscrn-kdmapop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='kdmapop.c' object='mapscrn-kdmapop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mapscrn_CFLAGS) $(CFLAGS) -c -o mapscrn-kdmapop.obj `if test -f 'kdmapop.c'; then $(CYGPATH_W) 'kdmapop.c'; else $(CYGPATH_W) '$(srcdir)/kdmapop.c'; fi`

.l.c:
	$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.y.c:
	$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f loadkeys.analyze.c
	-rm -f loadkeys.c
	-rm -f loadkeys.h
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS

.MAKE: all check install install-am install-exec-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dist_binSCRIPTS \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-exec-hook install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-dist_binSCRIPTS


install-exec-hook:
	for i in psfaddtable psfgettable psfstriptable; do \
		rm -f $(DESTDIR)$(bindir)/$$i; \
		ln -s psfxtable $(DESTDIR)$(bindir)/$$i || exit $$?; \
	done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
